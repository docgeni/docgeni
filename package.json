{
  "name": "docgeni",
  "version": "1.1.0",
  "scripts": {
    "ng": "ng",
    "start": "yarn run start:docs",
    "start:docs": "cross-env NODE_ENV=development ts-node --project ./packages/cli/tsconfig.json ./packages/cli/bin/docgeni serve",
    "build:a-lib": "ng build a-lib",
    "build": "yarn build:deps && yarn build:cli && yarn build:template && yarn update-package-json",
    "build:template": "ng build template && yarn build-styles",
    "build:preset": "ng build preset",
    "build:toolkit": "yarn workspace @docgeni/toolkit run build",
    "build:core": "yarn workspace @docgeni/core run build && ts-node --project ./scripts/tsconfig.json ./scripts/transform-angular-builder-schema.ts && cpx \"./packages/core/src/**/*.json\" ./packages/core/lib",
    "build:deps": "yarn build:toolkit && yarn build:core",
    "build:cli": "yarn workspace @docgeni/cli run build",
    "// test:mocha": "cross-env TS_NODE_PROJECT='./packages/cli/tsconfig.json' NODE_ENV=test mocha --timeout 999999 packages/**/test/**/*.spec.ts --require ts-node/register/transpile-only",
    "test-template": "ng test template",
    "test": "cross-env TS_NODE_PROJECT='./packages/cli/tsconfig.json' NODE_ENV=test node --require ts-node/register/transpile-only ./test/bootstrap.ts",
    "test-coverage": "rimraf ./coverage && rimraf ./nyc_output && nyc yarn test",
    "report-coverage": "cat ./coverage/lcov.info | coveralls",
    "lint": "yarn lint:lib",
    "lint:lib": "eslint -c ./.eslintrc.json --ignore-pattern '/packages/core/src/site-template/' \"./packages/?(cli|core|toolkit)/src/**/*.ts\"",
    "lint:ng": "ng lint",
    "e2e": "ng e2e",
    "build:docs": "cross-env NODE_ENV=development ts-node --project ./packages/cli/tsconfig.json ./packages/cli/bin/docgeni build",
    "build:docs:prod": "yarn build:deps && cross-env NODE_ENV=development ts-node --project ./packages/cli/tsconfig.json ./packages/cli/bin/docgeni build --prod",
    "build-gh-pages": "cross-env NODE_ENV=development ts-node --project ./packages/cli/tsconfig.json ./packages/cli/bin/docgeni build --prod --base-href=/docgeni/",
    "tsc": "tsc -p ./packages/docgeni",
    "preinstall": "node scripts/check-yarn.js",
    "sync-interfaces": "ts-node --project ./scripts/tsconfig.json ./scripts/sync-interfaces.ts",
    "sync-template-version": "ts-node --project ./scripts/tsconfig.json ./scripts/sync-template-version.ts",
    "update-package-json": "ts-node --project ./scripts/tsconfig.json ./scripts/update-package-json.ts",
    "release": "yarn build && yarn release-only",
    "release-only": "wpm release",
    "pub": "wpm publish && yarn pub-only",
    "pub-only": "lerna publish from-git && yarn pub-template",
    "pub:next": "wpm publish && yarn pub-only:next",
    "pub-only:next": "lerna publish from-git --dist-tag next && yarn pub-template:next",
    "pub:docs": "yarn build:docs:prod && cpx ./package.json ./dist/docgeni-site && yarn pub:docs:git",
    "pub:docs:git": "wpm git-publish --source ./dist/docgeni-site --name docgeni-site --organization docgeni",
    "pub-template": "cd dist/template && npm publish --access=public",
    "pub-template:next": "cd dist/template && npm publish --access=public --tag=next",
    "build-styles": "scss-bundle --config ./scss-bundle.config.json && sass ./packages/template/src/styles/index.scss >> dist/template/styles/index.css",
    "pretty": "pretty-quick --staged",
    "install-examples": "cd examples/full && npm i && cd ../lite && npm i"
  },
  "private": true,
  "workspaces": [
    "./packages/cli",
    "./packages/core",
    "./packages/toolkit",
    "./packages/template"
  ],
  "dependencies": {
    "@angular/animations": "~10.2.4",
    "@angular/cdk": "^10.2.7",
    "@angular/common": "~10.2.4",
    "@angular/compiler": "~10.2.4",
    "@angular/core": "~10.2.4",
    "@angular/forms": "~10.2.4",
    "@angular/platform-browser": "~10.2.4",
    "@angular/platform-browser-dynamic": "~10.2.4",
    "@angular/router": "~10.2.4",
    "@angularclass/hmr": "^2.1.3",
    "@types/watchpack": "^1.1.7",
    "chokidar": "^3.3.1",
    "cosmiconfig": "^6.0.0",
    "fancy-log": "^1.3.3",
    "marked": "^3.0.2",
    "rxjs": "~6.5.4",
    "tslib": "^2.0.0",
    "zone.js": "~0.10.2"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "~0.1002.1",
    "@angular-devkit/build-ng-packagr": "~0.1002.1",
    "@angular/cli": "~10.2.1",
    "@angular/compiler-cli": "~10.2.4",
    "@angular/language-service": "~10.2.4",
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-angular": "^11.0.0",
    "@istanbuljs/nyc-config-typescript": "^1.0.1",
    "@ngneat/spectator": "^7.1.0",
    "@types/chai": "^4.2.11",
    "@types/jasmine": "^3.6.6",
    "@types/jasminewd2": "~2.0.3",
    "@types/marked": "^3.0.0",
    "@types/node": "^12.12.30",
    "@types/yargs": "^15.0.4",
    "@typescript-eslint/eslint-plugin": "4.9.1",
    "@typescript-eslint/experimental-utils": "4.9.1",
    "@typescript-eslint/parser": "4.9.1",
    "@worktile/pkg-manager": "^0.0.4",
    "chai": "^4.2.0",
    "codelyzer": "^5.1.2",
    "coveralls": "^3.1.0",
    "cpx": "^1.5.0",
    "cross-env": "^7.0.3",
    "eslint": "7.15.0",
    "eslint-formatter-autolinkable-stylish": "1.1.4",
    "eslint-plugin-import": "2.22.1",
    "eslint-plugin-no-null": "^1.0.2",
    "husky": "^4.3.7",
    "jasmine-console-reporter": "^3.1.0",
    "jasmine-core": "~3.5.0",
    "jasmine-spec-reporter": "^6.0.0",
    "jasmine-ts-console-reporter": "^3.1.1",
    "karma": "~5.0.0",
    "karma-chrome-launcher": "~3.1.0",
    "karma-coverage-istanbul-reporter": "~3.0.2",
    "karma-jasmine": "~4.0.0",
    "karma-jasmine-html-reporter": "^1.5.0",
    "lerna": "^3.20.2",
    "mocha": "^7.1.1",
    "ncp": "^2.0.0",
    "ng-packagr": "^10.1.0",
    "nyc": "^15.1.0",
    "prettier": "^1.19.1",
    "pretty-quick": "^2.0.1",
    "protractor": "~7.0.0",
    "rimraf": "^3.0.2",
    "sass": "^1.35.1",
    "scss-bundle": "^3.1.2",
    "temp": "^0.9.4",
    "ts-node": "8.7.0",
    "tslint": "~6.1.0",
    "typemoq": "^2.1.0",
    "typescript": "4.0.5"
  },
  "keywords": [
    "angular",
    "docgeni",
    "docgen",
    "documentation",
    "docs",
    "markdown",
    "components",
    "library",
    "docs generator",
    "docs generate",
    "docs generator",
    "documentation generator",
    "static site generator"
  ],
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "pretty-quick --staged"
    }
  }
}
